###############################
# ERCF module
###############################

[ercf]
# Encoder 
encoder_pin: ^P1.0
encoder_resolution: 1.365188 # in mm
# Speeds and accels
# Long moves are faster than the small ones
# 100mm/s should be "quiet" with the NEMA14 motor or a NEMA17 pancake, but you can go lower if your really want it to be low noise
# Tested without any issue at 200mm/s, but it's noisy. I'm running mine at 170mm/s
long_moves_speed: 100 # mm/s. Default value is 100mm/s. 
long_moves_accel: 400 # mm/s². Default value is 400mm/s² 
short_moves_speed: 25 # mm/s. Default value is 25mm/s.
short_moves_accel: 400 # mm/s². Default value is 400mm/s²

[gcode_macro ERCF_VAR]
# =======================================================
# ================== VALUES TO ADJUST ===================
# =======================================================
#
# ==== Toolhead specific values ====
#
# Distance between the end of the reverse bowden and the toolhead sensor. Value is toolhead specific.
# Tested values :
# Galileo Clockwork with ERCF V1.1 sensor (hall effect) : 27.0    
# LGX on AfterBurner with ERCF V1.1 sensor (hall effect) : 44.0
variable_end_of_bowden_to_sensor: 27.0
# Length from the sensor to the nozzle melt pool.
# Reduce this value if there are blobs of filament on each load, before the purge on the tower.
# Increase this value if there are big gaps on the purge tower (i.e. if it takes time for the filament to get pushed out after a swap)
# Tested values :
# Dragon Normal Flow : 60.5
variable_sensor_to_nozzle: 60.5  
#
# ==== Values to tune ====         
#
# Tool position for the selector. This has to be tuned manually. Please scale this array to the number of tools you have
variable_colorselector = [2.4, 24.0, 44.8, 71.2, 92.0, 113.6, 139.2, 160.8, 181.6]
# Base value for the loading length used by the auto-calibration macro
# Please use a value SMALLER than the real reverse bowden length (like 50mm less)
variable_min_bowden_length: 750.0
# Servo angle for the Up position (i.e. tool disengaged). Refer to the manual to know how to properly tune this value
# Default values:
# MG90S servo : 30
# SAVOX SH0255MG : 140
variable_servo_up_angle: 30
# Servo angle for the Down position (i.e. tool engaged). Refer to the manual to know how to properly tune this value
# Default values:
# MG90S servo : 140
# SAVOX SH0255MG : 30
variable_servo_down_angle: 140
# Options to use or not 
# Beware that the clog detection and endless spool mode are in BETA mode for now
# Use at your own risk (beware of the involved macros and the pause(s) and resume ones)
# Put 0 to disable, 1 to enable
variable_clog_detection: 0
variable_endless_spool_mode: 0
# =======================================================
# ============ END OF VALUES TO ADJUST ==================
# =======================================================
# You shouldn't have to change anything below this point

# Things that you shouldn't have to change
variable_unload_modifier: 9.0                                                               # Modifier to adjust the ERCF park position (where the filament ends when doing an unload)
variable_min_temp_extruder: 180                                                             # Temp used during the auto-calibration macro, to ensure we can move the extruder (but not really extruding)
variable_extruder_eject_temp: 240                                                           # Temp used during filament ejection (in the ERCF_HOME macro, if a filament is detected in the toolhead)
variable_timeout_pause: 72000                                                               # Time out used by the ERCF_PAUSE
variable_disable_heater: 600                                                                # Delay after which the hotend heater is disabled in the ERCF_PAUSE state
gcode:

[save_variables]
filename: /home/pi/klipper_config/ercf_vars.cfg

###############################
# ERCF Calibration macros
###############################
[gcode_macro ERCF_CALIB_SELECTOR]
gcode:
    ERCF_SERVO_UP

    {% set move_length=(20.0 + (params.TOOL|int + 1)*21.0 + ((params.TOOL|int + 1)/3)*5.0) %}

    M118 Measuring the selector position for tool {params.TOOL}
    ERCF_GET_SELECTOR_POS REF={move_length|int}
    
    ERCF_MOTORS_OFF

[gcode_macro ERCF_CALIBRATE]
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
	M118 Start the complete auto calibration...
    M118 First home the ERCF
	ERCF_HOME

	{% for chan in range(printer["gcode_macro ERCF_VAR"].colorselector|length) %}
		ERCF_CALIBRATE_SINGLE TOOL={chan|int}
	{% endfor %}

	M118 End of the complete auto calibration!
    M118 Please reload the firmware for the calibration to be active!

[gcode_macro ERCF_CALIBRATE_SINGLE]
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
	{% if params.TOOL|int >= 0 and params.TOOL|int < printer["gcode_macro ERCF_VAR"].colorselector|length %}
		{% if printer["gcode_macro ERCF_HOME"].home == -1 %}
			M118 First home the ERCF
			ERCF_HOME
		{% endif %}

        ERCF_SELECT_TOOL TOOL={params.TOOL}
        ERCF_SET_STEPS RATIO=1.0

        {% if params.TOOL|int == 0 %}
            {% if printer['extruder'].temperature < printer["gcode_macro ERCF_VAR"].min_temp_extruder %}
	            M109 S{printer["gcode_macro ERCF_VAR"].min_temp_extruder|int}
            {% endif %}

            M118 Calibrating reference tool {params.TOOL}
            ERCF_LOAD LENGTH={printer["gcode_macro ERCF_VAR"].min_bowden_length}
            ERCF_HOME_EXTRUDER TOTAL_LENGTH=400 STEP_LENGTH=0.5
            
            ERCF_CALIB_SAVE_VAR TOOL={params.TOOL}

            G91
            G92 E0
            MANUAL_STEPPER STEPPER=gear_stepper SET_POSITION=0
            MANUAL_STEPPER STEPPER=gear_stepper MOVE=-{printer["gcode_macro ERCF_VAR"].end_of_bowden_to_sensor|float} SPEED=25 ACCEL=0 SYNC=0
            G1 E-{printer["gcode_macro ERCF_VAR"].end_of_bowden_to_sensor|float} F1500.0

            ERCF_CALIB_UNLOAD
            
            ERCF_BUZZ_GEAR_MOTOR
            ERCF_IS_FILAMENT_STUCK_IN_ERCF
            
            ERCF_UNSELECT_TOOL
        {% else %}
            M118 Calibrating tool {params.TOOL}

            ERCF_LOAD LENGTH={printer["gcode_macro ERCF_VAR"].min_bowden_length|float - 100.0}
            ERCF_CALIB_SAVE_VAR tool={params.TOOL}

            ERCF_CALIB_UNLOAD LENGTH={printer["gcode_macro ERCF_VAR"].min_bowden_length|float - 100.0 + 27.0}
        {% endif %}

	{% else %}
		M118 Tool out of range
	{% endif %}

[gcode_macro ERCF_CALIB_SAVE_VAR]
gcode:
    {% if params.TOOL|int == 0 %}
        M118 Tool {params.TOOL} calibration value is {printer['ercf'].encoder_pos|float}
        SAVE_VARIABLE VARIABLE=ercf_calib_ref VALUE={printer['ercf'].encoder_pos|float} # this is the reference value
        SAVE_VARIABLE VARIABLE=ercf_calib_{params.TOOL|int} VALUE=1.0
        SET_GCODE_VARIABLE MACRO=ERCF_CALIB_UNLOAD VARIABLE=ref VALUE={printer['ercf'].encoder_pos|float}
        SET_GCODE_VARIABLE MACRO=ERCF_CALIB_UNLOAD VARIABLE=ratio VALUE=1.0
    {% else %}
        {% set ratio = (printer["gcode_macro ERCF_VAR"].min_bowden_length|float - 100.0) / printer['ercf'].encoder_pos|float %}
        M118 Tool {params.TOOL} ratio is {ratio|float}
        SAVE_VARIABLE VARIABLE=ercf_calib_{params.TOOL|int} VALUE={ratio|float}
        SET_GCODE_VARIABLE MACRO=ERCF_CALIB_UNLOAD VARIABLE=ratio VALUE={ratio|float}
    {% endif %}

[gcode_macro ERCF_CALIB_UNLOAD]
variable_ratio: 0.0
variable_ref: 0.0
default_parameter_LENGTH: 0.0
gcode:
    {% if LENGTH|float == 0.0 %}
        ERCF_UNLOAD LENGTH={(ref|float)*(ratio|float) - printer["gcode_macro ERCF_VAR"].end_of_bowden_to_sensor|float + 27.0}
    {% else %}
        {% if ratio|float < 1.0 %} # No correction move is done in case of "over targeting", hence the correction ratio is not applied during this unload sequence
            ERCF_UNLOAD LENGTH={(LENGTH|float)}
        {% else %}
            ERCF_UNLOAD LENGTH={(LENGTH|float)*(ratio|float)}
        {% endif %}
    {% endif %}

[respond]
default_type: command

###############################
# ERCF motors
###############################
[gcode_macro ERCF_MOTORS_ON]
gcode:
    MANUAL_STEPPER STEPPER=gear_stepper ENABLE=1
    MANUAL_STEPPER STEPPER=selector_stepper ENABLE=1

[gcode_macro ERCF_MOTORS_OFF]
gcode:
    MANUAL_STEPPER STEPPER=gear_stepper ENABLE=0
    MANUAL_STEPPER STEPPER=selector_stepper ENABLE=0
    

###############################
# ERCF endstop status 
###############################
# Display the last queried status
[gcode_macro ERCF_ENDSTOPS_STATUS]
gcode:
    M118 Endstops status :
    M118 Extruder : {printer.query_endstops.last_query["manual_stepper gear_stepper"]}
    M118 ERCF home : {printer.query_endstops.last_query["manual_stepper selector_stepper"]}

# Query and display the status
[gcode_macro ERCF_INFO]
gcode:
    QUERY_ENDSTOPS
    ERCF_ENDSTOPS_STATUS
